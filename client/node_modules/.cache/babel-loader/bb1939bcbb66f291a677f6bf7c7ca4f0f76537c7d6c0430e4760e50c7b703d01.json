{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Budgetly\\\\client\\\\src\\\\components\\\\AddExpenseForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpenseForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: \"\",\n    category: \"\",\n    amount: \"\",\n    title: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"No authentication token found. Please sign in.\");\n      return;\n    }\n\n    // Date validation against planner dates\n    try {\n      const progressRes = await fetch(\"http://localhost:5000/api/planner/progress\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (progressRes.ok) {\n        const {\n          startDate,\n          endDate\n        } = await progressRes.json();\n        const expenseDate = new Date(formData.date);\n        const plannerStart = new Date(startDate);\n        const plannerEnd = new Date(endDate);\n        if (expenseDate < plannerStart || expenseDate > plannerEnd) {\n          alert(\"Expense date must be within your planner's date range\");\n          return;\n        }\n      }\n    } catch (err) {\n      console.error(\"Date validation error:\", err);\n    }\n\n    // Submit the expense\n    try {\n      const response = await fetch(\"http://localhost:5000/api/expenses\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...formData,\n          amount: parseFloat(formData.amount)\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Expense saved:\", data);\n        alert(\"Expense added successfully!\");\n        window.dispatchEvent(new CustomEvent(\"expenseAdded\", {\n          detail: {\n            category: formData.category,\n            amount: parseFloat(formData.amount)\n          }\n        }));\n        setFormData({\n          date: \"\",\n          category: \"\",\n          amount: \"\",\n          title: \"\",\n          message: \"\"\n        });\n      } else {\n        const errorText = await response.text();\n        console.error(\"Failed to save expense:\", errorText);\n        alert(\"Failed to save expense: \" + errorText);\n      }\n    } catch (error) {\n      console.error(\"Error connecting to backend:\", error);\n      alert(\"Error connecting to backend.\");\n    }\n  };\n\n  // ... rest of your JSX remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto bg-white rounded-3xl p-6 shadow-md\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AddExpenseForm, \"orU5zOZNfyhDz/ztcw4hePGHlTg=\");\n_c = AddExpenseForm;\nexport default AddExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"AddExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddExpenseForm","_s","formData","setFormData","date","category","amount","title","message","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","token","localStorage","getItem","alert","progressRes","fetch","headers","Authorization","ok","startDate","endDate","json","expenseDate","Date","plannerStart","plannerEnd","err","console","error","response","method","body","JSON","stringify","parseFloat","data","log","window","dispatchEvent","CustomEvent","detail","errorText","text","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/components/AddExpenseForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddExpenseForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    category: \"\",\r\n    amount: \"\",\r\n    title: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"No authentication token found. Please sign in.\");\r\n      return;\r\n    }\r\n\r\n    // Date validation against planner dates\r\n    try {\r\n      const progressRes = await fetch(\"http://localhost:5000/api/planner/progress\", {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      if (progressRes.ok) {\r\n        const { startDate, endDate } = await progressRes.json();\r\n        const expenseDate = new Date(formData.date);\r\n        const plannerStart = new Date(startDate);\r\n        const plannerEnd = new Date(endDate);\r\n        \r\n        if (expenseDate < plannerStart || expenseDate > plannerEnd) {\r\n          alert(\"Expense date must be within your planner's date range\");\r\n          return;\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Date validation error:\", err);\r\n    }\r\n\r\n    // Submit the expense\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/expenses\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          amount: parseFloat(formData.amount)\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Expense saved:\", data);\r\n        alert(\"Expense added successfully!\");\r\n\r\n        window.dispatchEvent(\r\n          new CustomEvent(\"expenseAdded\", {\r\n            detail: {\r\n              category: formData.category,\r\n              amount: parseFloat(formData.amount)\r\n            }\r\n          })\r\n        );\r\n\r\n        setFormData({\r\n          date: \"\",\r\n          category: \"\",\r\n          amount: \"\",\r\n          title: \"\",\r\n          message: \"\"\r\n        });\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(\"Failed to save expense:\", errorText);\r\n        alert(\"Failed to save expense: \" + errorText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to backend:\", error);\r\n      alert(\"Error connecting to backend.\");\r\n    }\r\n  };\r\n\r\n  // ... rest of your JSX remains the same\r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-white rounded-3xl p-6 shadow-md\">\r\n      {/* Your existing form JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExpenseForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}