{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { FaFilter, FaUndo, FaTrash } from \"react-icons/fa\";\nfunction ExpensesPage() {\n  // ... [keep all your existing state declarations] ...\n\n  const handleDelete = async (id, type) => {\n    if (!window.confirm(\"Are you sure you want to delete this record?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      const endpoint = type === 'income' ? 'incomes' : 'expenses'; // Note: Fixed typo from 'expenses' to match your backend\n\n      const response = await fetch(`http://localhost:5000/api/${endpoint}/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // First check if the response is JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        const text = await response.text();\n        throw new Error(text || 'Invalid response from server');\n      }\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to delete record');\n      }\n\n      // Update state if deletion was successful\n      const updatedExpenses = expenses.filter(expense => expense._id !== id);\n      setExpenses(updatedExpenses);\n      setFilteredExpenses(updatedFiltered);\n\n      // ... [rest of your success handling] ...\n    } catch (error) {\n      console.error('Delete error:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n\n  // ... [rest of your component code remains the same] ...\n}\n_c = ExpensesPage;\nvar _c;\n$RefreshReg$(_c, \"ExpensesPage\");","map":{"version":3,"names":["React","useEffect","useState","FaFilter","FaUndo","FaTrash","ExpensesPage","handleDelete","id","type","window","confirm","token","localStorage","getItem","endpoint","response","fetch","method","headers","contentType","get","includes","text","Error","data","json","ok","error","updatedExpenses","expenses","filter","expense","_id","setExpenses","setFilteredExpenses","updatedFiltered","console","alert","message","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/pages/ExpensesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FaFilter, FaUndo, FaTrash } from \"react-icons/fa\";\r\n\r\nfunction ExpensesPage() {\r\n  // ... [keep all your existing state declarations] ...\r\n\r\n  const handleDelete = async (id, type) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this record?\")) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const endpoint = type === 'income' ? 'incomes' : 'expenses'; // Note: Fixed typo from 'expenses' to match your backend\r\n\r\n      const response = await fetch(`http://localhost:5000/api/${endpoint}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n\r\n      // First check if the response is JSON\r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('application/json')) {\r\n        const text = await response.text();\r\n        throw new Error(text || 'Invalid response from server');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Failed to delete record');\r\n      }\r\n\r\n      // Update state if deletion was successful\r\n      const updatedExpenses = expenses.filter((expense) => expense._id !== id);\r\n      setExpenses(updatedExpenses);\r\n      setFilteredExpenses(updatedFiltered);\r\n      \r\n      // ... [rest of your success handling] ...\r\n\r\n    } catch (error) {\r\n      console.error('Delete error:', error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // ... [rest of your component code remains the same] ...\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB;AAE1D,SAASC,YAAYA,CAAA,EAAG;EACtB;;EAEA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,IAAI,KAAK;IACvC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,8CAA8C,CAAC,EAAE;IAErE,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAGN,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC;;MAE7D,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BF,QAAQ,IAAIP,EAAE,EAAE,EAAE;QAC1EU,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUP,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAEF;MACA,MAAMQ,WAAW,GAAGJ,QAAQ,CAACG,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC;MACxD,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC7D,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIC,KAAK,CAACD,IAAI,IAAI,8BAA8B,CAAC;MACzD;MAEA,MAAME,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIH,KAAK,CAACC,IAAI,CAACG,KAAK,IAAI,yBAAyB,CAAC;MAC1D;;MAEA;MACA,MAAMC,eAAe,GAAGC,QAAQ,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKzB,EAAE,CAAC;MACxE0B,WAAW,CAACL,eAAe,CAAC;MAC5BM,mBAAmB,CAACC,eAAe,CAAC;;MAEpC;IAEF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCU,KAAK,CAAC,UAAUV,KAAK,CAACW,OAAO,EAAE,CAAC;IAClC;EACF,CAAC;;EAED;AACF;AAACC,EAAA,GA7CQlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}