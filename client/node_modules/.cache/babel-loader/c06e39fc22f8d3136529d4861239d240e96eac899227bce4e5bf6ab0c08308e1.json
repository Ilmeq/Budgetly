{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Budgetly\\\\client\\\\src\\\\components\\\\PlannerProgress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlannerProgress = () => {\n  _s();\n  const [progressData, setProgressData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchProgress = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setProgressData(data.categories);\n      }\n    } catch (e) {\n      console.error(\"Failed to fetch progress\", e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProgress();\n\n    // Optionally listen to your \"expenseAdded\" event to refetch progress:\n    const handler = () => fetchProgress();\n    window.addEventListener(\"expenseAdded\", handler);\n    return () => window.removeEventListener(\"expenseAdded\", handler);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading progress...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (!progressData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No progress data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(progressData).map(([category, {\n      limit,\n      spent\n    }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        max: limit,\n        value: spent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [spent, \" / \", limit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PlannerProgress, \"v67n5zndZKw5oTHfZAAHlj3dQoA=\");\n_c = PlannerProgress;\nexport default PlannerProgress;\nvar _c;\n$RefreshReg$(_c, \"PlannerProgress\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PlannerProgress","_s","progressData","setProgressData","loading","setLoading","fetchProgress","token","localStorage","getItem","res","fetch","headers","Authorization","ok","data","json","categories","e","console","error","handler","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","category","limit","spent","max","value","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/components/PlannerProgress.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst PlannerProgress = () => {\r\n  const [progressData, setProgressData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchProgress = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setProgressData(data.categories);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Failed to fetch progress\", e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProgress();\r\n\r\n    // Optionally listen to your \"expenseAdded\" event to refetch progress:\r\n    const handler = () => fetchProgress();\r\n    window.addEventListener(\"expenseAdded\", handler);\r\n\r\n    return () => window.removeEventListener(\"expenseAdded\", handler);\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading progress...</p>;\r\n  if (!progressData) return <p>No progress data available.</p>;\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(progressData).map(([category, { limit, spent }]) => (\r\n        <div key={category}>\r\n          <h3>{category}</h3>\r\n          <progress max={limit} value={spent}></progress>\r\n          <p>{spent} / {limit}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlannerProgress;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACpEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;MACF,IAAIG,GAAG,CAACI,EAAE,EAAE;QACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7Bb,eAAe,CAACY,IAAI,CAACE,UAAU,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,CAAC,CAAC;IAC9C,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMe,OAAO,GAAGA,CAAA,KAAMf,aAAa,CAAC,CAAC;IACrCgB,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEF,OAAO,CAAC;IAEhD,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEH,OAAO,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIjB,OAAO,EAAE,oBAAOL,OAAA;IAAA0B,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC9C,IAAI,CAAC3B,YAAY,EAAE,oBAAOH,OAAA;IAAA0B,QAAA,EAAG;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5D,oBACE9B,OAAA;IAAA0B,QAAA,EACGK,MAAM,CAACC,OAAO,CAAC7B,YAAY,CAAC,CAAC8B,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAE;MAAEC,KAAK;MAAEC;IAAM,CAAC,CAAC,kBAC7DpC,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAKQ;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnB9B,OAAA;QAAUqC,GAAG,EAAEF,KAAM;QAACG,KAAK,EAAEF;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC/C9B,OAAA;QAAA0B,QAAA,GAAIU,KAAK,EAAC,KAAG,EAACD,KAAK;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHhBI,QAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}