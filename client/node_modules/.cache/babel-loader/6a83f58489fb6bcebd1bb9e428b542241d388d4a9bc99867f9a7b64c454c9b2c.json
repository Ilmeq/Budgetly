{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Budgetly\\\\client\\\\src\\\\pages\\\\Planner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PlannerProgress from \"../components/PlannerProgress\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Planner = () => {\n  _s();\n  const categoryList = [\"Groceries\", \"Bills, rent, insurance\", \"Entertainment & Lifestyle\", \"Unexpected\", \"Medical\"];\n  const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\n\n  const [initialAmount, setInitialAmount] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [spendingLimits, setSpendingLimits] = useState(categoryList.reduce((acc, cat) => {\n    acc[cat] = \"\";\n    return acc;\n  }, {}));\n\n  // State to know if planner exists (shows progress bar instead of form)\n  const [plannerExists, setPlannerExists] = useState(false);\n  // State to trigger progress refresh\n  const [refreshProgress, setRefreshProgress] = useState(false);\n  // Loading to detect initial planner fetch\n  const [loadingPlanner, setLoadingPlanner] = useState(true);\n\n  // On mount, check if active planner exists by trying to fetch progress\n  useEffect(() => {\n    const fetchPlannerExists = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setPlannerExists(false);\n        setLoadingPlanner(false);\n        return;\n      }\n      try {\n        const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.ok) {\n          setPlannerExists(true);\n        } else {\n          setPlannerExists(false);\n        }\n      } catch {\n        setPlannerExists(false);\n      }\n      setLoadingPlanner(false);\n    };\n    fetchPlannerExists();\n  }, []);\n\n  // Load saved planner to pre-fill form if available\n  useEffect(() => {\n    const savedPlanner = JSON.parse(localStorage.getItem(\"plannerData\"));\n    if (savedPlanner) {\n      setInitialAmount(savedPlanner.initialAmount || \"\");\n      setStartDate(savedPlanner.startDate || \"\");\n      setEndDate(savedPlanner.endDate || \"\");\n      setSpendingLimits(savedPlanner.spendingLimits || {});\n    }\n  }, []);\n\n  // Handle submit to save planner\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const categoriesArray = Object.entries(spendingLimits).map(([category, limit]) => ({\n      category,\n      limit: Number(limit) || 0\n    }));\n    const plannerData = {\n      initialAmount: Number(initialAmount),\n      startDate,\n      endDate,\n      categories: categoriesArray\n    };\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"Please log in first.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/planner\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(plannerData)\n      });\n      if (res.ok) {\n        alert(\"Planner saved successfully!\");\n        localStorage.setItem(\"plannerData\", JSON.stringify(plannerData));\n        setPlannerExists(true); // Show progress bar now\n        setRefreshProgress(prev => !prev); // Refresh progress data\n      } else {\n        const errorText = await res.text();\n        alert(\"Failed to save planner: \" + errorText);\n      }\n    } catch (err) {\n      alert(\"Error connecting to backend.\");\n    }\n  };\n\n  // Handle delete plan to create new\n  const handleCreateNewPlan = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"Please log in first.\");\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete the current plan and create a new one?\")) {\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/planner\", {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        alert(\"Planner deleted. You can now create a new plan.\");\n        setPlannerExists(false);\n        setInitialAmount(\"\");\n        setStartDate(\"\");\n        setEndDate(\"\");\n        setSpendingLimits(categoryList.reduce((acc, cat) => {\n          acc[cat] = \"\";\n          return acc;\n        }, {}));\n      } else {\n        const errorText = await res.text();\n        alert(\"Failed to delete planner: \" + errorText);\n      }\n    } catch (err) {\n      alert(\"Error deleting planner.\");\n    }\n  };\n  if (loadingPlanner) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading planner...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto bg-white p-6 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Budget Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), plannerExists ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlannerProgress, {\n        refresh: refreshProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNewPlan,\n        className: \"mt-6 bg-red-500 text-white px-6 py-2 rounded hover:bg-red-600\",\n        children: \"Create New Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block font-medium mb-1\",\n            children: \"Initial Amount (your starting balance)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: initialAmount,\n            onChange: e => setInitialAmount(e.target.value),\n            className: \"w-full border rounded px-4 py-2\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block font-medium mb-1\",\n              children: \"Plan Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: startDate,\n              onChange: e => {\n                setStartDate(e.target.value);\n                if (endDate && e.target.value > endDate) {\n                  setEndDate(\"\");\n                }\n              },\n              className: \"w-full border rounded px-4 py-2\",\n              min: today,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block font-medium mb-1\",\n              children: \"Plan End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full border rounded px-4 py-2\",\n              min: startDate || today,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mt-4 mb-2\",\n            children: \"Set Spending Limits by Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), categoryList.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"w-56\",\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              value: spendingLimits[category],\n              onChange: e => setSpendingLimits({\n                ...spendingLimits,\n                [category]: e.target.value\n              }),\n              className: \"border rounded px-3 py-1 w-48\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-teal-500 text-white px-6 py-2 rounded hover:bg-teal-600\",\n          children: \"Save Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(Planner, \"3E1ggf0t658c/mo0UvPzpPOiVhw=\");\n_c = Planner;\nexport default Planner;\nvar _c;\n$RefreshReg$(_c, \"Planner\");","map":{"version":3,"names":["React","useState","useEffect","PlannerProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","Planner","_s","categoryList","today","Date","toISOString","split","initialAmount","setInitialAmount","startDate","setStartDate","endDate","setEndDate","spendingLimits","setSpendingLimits","reduce","acc","cat","plannerExists","setPlannerExists","refreshProgress","setRefreshProgress","loadingPlanner","setLoadingPlanner","fetchPlannerExists","token","localStorage","getItem","res","fetch","headers","Authorization","ok","savedPlanner","JSON","parse","handleSubmit","e","preventDefault","categoriesArray","Object","entries","map","category","limit","Number","plannerData","categories","alert","method","body","stringify","setItem","prev","errorText","text","err","handleCreateNewPlan","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","className","refresh","onClick","onSubmit","type","value","onChange","target","required","min","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/pages/Planner.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PlannerProgress from \"../components/PlannerProgress\";\r\n\r\nconst Planner = () => {\r\n  const categoryList = [\r\n    \"Groceries\",\r\n    \"Bills, rent, insurance\",\r\n    \"Entertainment & Lifestyle\",\r\n    \"Unexpected\",\r\n    \"Medical\",\r\n  ];\r\n\r\n  const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\r\n\r\n  const [initialAmount, setInitialAmount] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [spendingLimits, setSpendingLimits] = useState(\r\n    categoryList.reduce((acc, cat) => {\r\n      acc[cat] = \"\";\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  // State to know if planner exists (shows progress bar instead of form)\r\n  const [plannerExists, setPlannerExists] = useState(false);\r\n  // State to trigger progress refresh\r\n  const [refreshProgress, setRefreshProgress] = useState(false);\r\n  // Loading to detect initial planner fetch\r\n  const [loadingPlanner, setLoadingPlanner] = useState(true);\r\n\r\n  // On mount, check if active planner exists by trying to fetch progress\r\n  useEffect(() => {\r\n    const fetchPlannerExists = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        setPlannerExists(false);\r\n        setLoadingPlanner(false);\r\n        return;\r\n      }\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        if (res.ok) {\r\n          setPlannerExists(true);\r\n        } else {\r\n          setPlannerExists(false);\r\n        }\r\n      } catch {\r\n        setPlannerExists(false);\r\n      }\r\n      setLoadingPlanner(false);\r\n    };\r\n\r\n    fetchPlannerExists();\r\n  }, []);\r\n\r\n  // Load saved planner to pre-fill form if available\r\n  useEffect(() => {\r\n    const savedPlanner = JSON.parse(localStorage.getItem(\"plannerData\"));\r\n    if (savedPlanner) {\r\n      setInitialAmount(savedPlanner.initialAmount || \"\");\r\n      setStartDate(savedPlanner.startDate || \"\");\r\n      setEndDate(savedPlanner.endDate || \"\");\r\n      setSpendingLimits(savedPlanner.spendingLimits || {});\r\n    }\r\n  }, []);\r\n\r\n  // Handle submit to save planner\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const categoriesArray = Object.entries(spendingLimits).map(([category, limit]) => ({\r\n      category,\r\n      limit: Number(limit) || 0,\r\n    }));\r\n\r\n    const plannerData = {\r\n      initialAmount: Number(initialAmount),\r\n      startDate,\r\n      endDate,\r\n      categories: categoriesArray,\r\n    };\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"Please log in first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/planner\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(plannerData),\r\n      });\r\n\r\n      if (res.ok) {\r\n        alert(\"Planner saved successfully!\");\r\n        localStorage.setItem(\"plannerData\", JSON.stringify(plannerData));\r\n        setPlannerExists(true);      // Show progress bar now\r\n        setRefreshProgress((prev) => !prev); // Refresh progress data\r\n      } else {\r\n        const errorText = await res.text();\r\n        alert(\"Failed to save planner: \" + errorText);\r\n      }\r\n    } catch (err) {\r\n      alert(\"Error connecting to backend.\");\r\n    }\r\n  };\r\n\r\n  // Handle delete plan to create new\r\n  const handleCreateNewPlan = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"Please log in first.\");\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(\"Are you sure you want to delete the current plan and create a new one?\")) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/planner\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (res.ok) {\r\n        alert(\"Planner deleted. You can now create a new plan.\");\r\n        setPlannerExists(false);\r\n        setInitialAmount(\"\");\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n        setSpendingLimits(categoryList.reduce((acc, cat) => {\r\n          acc[cat] = \"\";\r\n          return acc;\r\n        }, {}));\r\n      } else {\r\n        const errorText = await res.text();\r\n        alert(\"Failed to delete planner: \" + errorText);\r\n      }\r\n    } catch (err) {\r\n      alert(\"Error deleting planner.\");\r\n    }\r\n  };\r\n\r\n  if (loadingPlanner) return <p>Loading planner...</p>;\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto bg-white p-6 rounded shadow\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Budget Planner</h1>\r\n\r\n      {plannerExists ? (\r\n        <>\r\n          <PlannerProgress refresh={refreshProgress} />\r\n          <button\r\n            onClick={handleCreateNewPlan}\r\n            className=\"mt-6 bg-red-500 text-white px-6 py-2 rounded hover:bg-red-600\"\r\n          >\r\n            Create New Plan\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">\r\n                Initial Amount (your starting balance)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={initialAmount}\r\n                onChange={(e) => setInitialAmount(e.target.value)}\r\n                className=\"w-full border rounded px-4 py-2\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block font-medium mb-1\">Plan Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => {\r\n                    setStartDate(e.target.value);\r\n                    if (endDate && e.target.value > endDate) {\r\n                      setEndDate(\"\");\r\n                    }\r\n                  }}\r\n                  className=\"w-full border rounded px-4 py-2\"\r\n                  min={today}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block font-medium mb-1\">Plan End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                  className=\"w-full border rounded px-4 py-2\"\r\n                  min={startDate || today}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h2 className=\"text-lg font-semibold mt-4 mb-2\">Set Spending Limits by Category</h2>\r\n              {categoryList.map((category) => (\r\n                <div key={category} className=\"flex items-center gap-4 mb-2\">\r\n                  <label className=\"w-56\">{category}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={spendingLimits[category]}\r\n                    onChange={(e) =>\r\n                      setSpendingLimits({\r\n                        ...spendingLimits,\r\n                        [category]: e.target.value,\r\n                      })\r\n                    }\r\n                    className=\"border rounded px-3 py-1 w-48\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-teal-500 text-white px-6 py-2 rounded hover:bg-teal-600\"\r\n            >\r\n              Save Plan\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planner;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}