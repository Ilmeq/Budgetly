{"ast":null,"code":"// Add this validation before submission\nconst handleSubmit = async e => {\n  e.preventDefault();\n\n  // Validate expense date is within active planner dates\n  try {\n    const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (res.ok) {\n      var _Object$values$;\n      const {\n        categories\n      } = await res.json();\n      const expenseDate = new Date(formData.date);\n      const plannerDates = (_Object$values$ = Object.values(categories)[0]) === null || _Object$values$ === void 0 ? void 0 : _Object$values$.dateRange;\n      if (plannerDates && (expenseDate < new Date(plannerDates.start) || expenseDate > new Date(plannerDates.end))) {\n        alert(\"Expense date is outside planner date range!\");\n        return;\n      }\n    }\n  } catch (err) {\n    console.error(\"Date validation error:\", err);\n  }\n\n  // ... rest of existing submission logic\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","res","fetch","headers","Authorization","token","ok","_Object$values$","categories","json","expenseDate","Date","formData","date","plannerDates","Object","values","dateRange","start","end","alert","err","console","error"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/components/AddExpenseForm.jsx"],"sourcesContent":["// Add this validation before submission\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Validate expense date is within active planner dates\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/api/planner/progress\", {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    \r\n    if (res.ok) {\r\n      const { categories } = await res.json();\r\n      const expenseDate = new Date(formData.date);\r\n      const plannerDates = Object.values(categories)[0]?.dateRange;\r\n      \r\n      if (plannerDates && \r\n          (expenseDate < new Date(plannerDates.start) || \r\n           expenseDate > new Date(plannerDates.end))) {\r\n        alert(\"Expense date is outside planner date range!\");\r\n        return;\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Date validation error:\", err);\r\n  }\r\n\r\n  // ... rest of existing submission logic\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACpEC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,KAAK;MAAG;IAC9C,CAAC,CAAC;IAEF,IAAIJ,GAAG,CAACK,EAAE,EAAE;MAAA,IAAAC,eAAA;MACV,MAAM;QAAEC;MAAW,CAAC,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MACvC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MAC3C,MAAMC,YAAY,IAAAP,eAAA,GAAGQ,MAAM,CAACC,MAAM,CAACR,UAAU,CAAC,CAAC,CAAC,CAAC,cAAAD,eAAA,uBAA5BA,eAAA,CAA8BU,SAAS;MAE5D,IAAIH,YAAY,KACXJ,WAAW,GAAG,IAAIC,IAAI,CAACG,YAAY,CAACI,KAAK,CAAC,IAC1CR,WAAW,GAAG,IAAIC,IAAI,CAACG,YAAY,CAACK,GAAG,CAAC,CAAC,EAAE;QAC9CC,KAAK,CAAC,6CAA6C,CAAC;QACpD;MACF;IACF;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;EAC9C;;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}