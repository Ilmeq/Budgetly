{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/planner';\nexport const createPlanner = async (plannerData, token) => {\n  try {\n    const response = await axios.post(API_URL, {\n      startAmount: plannerData.initialBudget,\n      startDate: new Date().toISOString(),\n      // current date as ISO string\n      endDate: new Date(new Date().setMonth(new Date().getMonth() + 1)).toISOString(),\n      // +1 month\n      categories: plannerData.spendingLimits\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('❌ Error creating planner:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const getPlanner = async token => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error fetching planner:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","createPlanner","plannerData","token","response","post","startAmount","initialBudget","startDate","Date","toISOString","endDate","setMonth","getMonth","categories","spendingLimits","headers","Authorization","data","error","_error$response","console","message","getPlanner","get"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/api/planner.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/planner';\r\n\r\nexport const createPlanner = async (plannerData, token) => {\r\n  try {\r\n    const response = await axios.post(\r\n      API_URL,\r\n      {\r\n        startAmount: plannerData.initialBudget,\r\n        startDate: new Date().toISOString(), // current date as ISO string\r\n        endDate: new Date(new Date().setMonth(new Date().getMonth() + 1)).toISOString(), // +1 month\r\n        categories: plannerData.spendingLimits,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error creating planner:', error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getPlanner = async (token) => {\r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('❌ Error fetching planner:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;EACzD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/BL,OAAO,EACP;MACEM,WAAW,EAAEJ,WAAW,CAACK,aAAa;MACtCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAAE;MACrCC,OAAO,EAAE,IAAIF,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACG,QAAQ,CAAC,IAAIH,IAAI,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAACH,WAAW,CAAC,CAAC;MAAE;MACjFI,UAAU,EAAEZ,WAAW,CAACa;IAC1B,CAAC,EACD;MACEC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUd,KAAK;MAChC;IACF,CACF,CAAC;IACD,OAAOC,QAAQ,CAACc,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACf,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;IACjF,MAAMH,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOpB,KAAK,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACyB,GAAG,CAACxB,OAAO,EAAE;MACxCgB,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUd,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACc,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}