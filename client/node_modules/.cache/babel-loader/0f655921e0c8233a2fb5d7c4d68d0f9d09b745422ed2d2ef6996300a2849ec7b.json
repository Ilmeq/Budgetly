{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Budgetly\\\\client\\\\src\\\\pages\\\\Badges.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ExpensesContext } from '../context/ExpensesContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Badges = () => {\n  _s();\n  // All hooks declared at the top\n  const {\n    expenses,\n    isLoading,\n    error: contextError,\n    setExpenses\n  } = useContext(ExpensesContext);\n  const [error, setError] = useState('');\n\n  // Initial badges data\n  const initialBadges = [{\n    id: 1,\n    name: 'Debt Destroyer',\n    totalAmount: 0,\n    paidAmount: 0,\n    completed: false\n  }, {\n    id: 2,\n    name: 'Emergency Hero',\n    totalAmount: 0,\n    paidAmount: 0,\n    completed: false\n  }, {\n    id: 3,\n    name: 'Savings Champion',\n    totalAmount: 0,\n    paidAmount: 0,\n    completed: false\n  }, {\n    id: 4,\n    name: 'Investment Starter',\n    totalAmount: 0,\n    paidAmount: 0,\n    completed: false\n  }, {\n    id: 5,\n    name: 'Retirement Planner',\n    totalAmount: 0,\n    paidAmount: 0,\n    completed: false\n  }, {\n    id: 6,\n    name: 'Goal Getter',\n    completed: false\n  }];\n  const [badges, setBadges] = useState(initialBadges);\n  const [inputAmounts, setInputAmounts] = useState({});\n\n  // Calculations\n  const totalIncome = expenses.filter(e => e.type && String(e.type).trim().toLowerCase() === 'income').reduce((sum, e) => sum + (parseFloat(e.amount) || 0), 0);\n  const totalExpenses = expenses.filter(e => e.type && String(e.type).trim().toLowerCase() === 'expense').reduce((sum, e) => sum + (parseFloat(e.amount) || 0), 0);\n  const availableIncome = totalIncome - totalExpenses;\n\n  // Effects\n  useEffect(() => {\n    const completedCount = badges.filter(b => b.id !== 6 && b.completed).length;\n    setBadges(prev => prev.map(badge => badge.id === 6 ? {\n      ...badge,\n      completed: completedCount >= 3\n    } : badge));\n  }, [badges]);\n\n  // Helper functions\n  const handleSetAmount = id => {\n    const amount = parseFloat(inputAmounts[id] || 0);\n    if (amount > 0) {\n      setBadges(badges.map(badge => badge.id === id ? {\n        ...badge,\n        totalAmount: amount\n      } : badge));\n      setInputAmounts({\n        ...inputAmounts,\n        [id]: ''\n      });\n    }\n  };\n  const handleAddPayment = async id => {\n    const payment = parseFloat(inputAmounts[id] || 0);\n    if (payment <= 0) {\n      setError('Payment amount must be positive');\n      return;\n    }\n    if (payment > availableIncome) {\n      setError(`You only have $${availableIncome.toFixed(2)} available. Cannot pay $${payment.toFixed(2)}`);\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const newExpense = {\n        title: `Payment to ${badges.find(b => b.id === id).name}`,\n        amount: payment,\n        type: 'expense',\n        category: 'Debt Payment',\n        date: new Date().toISOString()\n      };\n      const response = await fetch(\"http://localhost:5000/api/expenses\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newExpense)\n      });\n      if (!response.ok) throw new Error(\"Failed to save payment\");\n      const data = await response.json();\n      setExpenses([...expenses, data]);\n      setBadges(badges.map(badge => {\n        if (badge.id === id) {\n          const newPaid = badge.paidAmount + payment;\n          return {\n            ...badge,\n            paidAmount: newPaid,\n            completed: newPaid >= badge.totalAmount\n          };\n        }\n        return badge;\n      }));\n      setInputAmounts({\n        ...inputAmounts,\n        [id]: ''\n      });\n      setError('');\n      window.dispatchEvent(new Event('expenseAdded'));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const getProgress = badge => {\n    if (!badge.totalAmount) return 0;\n    return Math.min(100, badge.paidAmount / badge.totalAmount * 100);\n  };\n\n  // Loading state check\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: \"Loading financial data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 23\n  }, this);\n  if (contextError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [\"Error: \", contextError]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Financial Badges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-red-100 text-red-700 rounded-md\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: [\"Available Income: $\", availableIncome.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"Total Income: $\", totalIncome.toFixed(2), \" | Total Expenses: $\", totalExpenses.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: badges.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-white rounded-xl shadow-md p-6 relative ${badge.id === 6 ? 'border-2 border-purple-500' : ''}`,\n        children: [badge.completed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 right-4 bg-yellow-400 text-white rounded-full w-10 h-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: badge.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), badge.id !== 6 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Enter total amount\",\n                value: inputAmounts[badge.id] || '',\n                onChange: e => setInputAmounts({\n                  ...inputAmounts,\n                  [badge.id]: e.target.value\n                }),\n                className: \"flex-1 p-2 border rounded-l-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSetAmount(badge.id),\n                className: \"bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600\",\n                children: \"Set\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), badge.totalAmount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Total: $\", badge.totalAmount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 rounded-full h-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-green-500 h-4 rounded-full\",\n                style: {\n                  width: `${getProgress(badge)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between text-sm mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", badge.paidAmount.toFixed(2), \" paid\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", Math.max(0, badge.totalAmount - badge.paidAmount).toFixed(2), \" left\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Add payment\",\n              value: inputAmounts[badge.id] || '',\n              onChange: e => {\n                setInputAmounts({\n                  ...inputAmounts,\n                  [badge.id]: e.target.value\n                });\n                setError('');\n              },\n              className: \"flex-1 p-2 border rounded-l-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddPayment(badge.id),\n              className: \"bg-green-500 text-white px-4 py-2 rounded-r-md hover:bg-green-600 disabled:bg-gray-300\",\n              disabled: badge.totalAmount === 0 || availableIncome <= 0,\n              children: \"Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-2\",\n            children: \"Complete any 3 other badges to unlock this achievement!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-500 h-4 rounded-full\",\n              style: {\n                width: `${badges.filter(b => b.completed).length / 3 * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm mt-2\",\n            children: [\"Progress: \", badges.filter(b => b.completed).length, \"/3 completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), badge.completed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-green-100 text-green-800 rounded-md text-center\",\n          children: badge.id === 6 ? \"Amazing! You're a Goal Getter!\" : `Congratulations! You've earned the ${badge.name} badge!`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)]\n      }, badge.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Badges, \"4KAkx53LgFEgAC7oxKDsJ6H/pFg=\");\n_c = Badges;\nexport default Badges;\nvar _c;\n$RefreshReg$(_c, \"Badges\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ExpensesContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Badges","_s","expenses","isLoading","error","contextError","setExpenses","setError","initialBadges","id","name","totalAmount","paidAmount","completed","badges","setBadges","inputAmounts","setInputAmounts","totalIncome","filter","e","type","String","trim","toLowerCase","reduce","sum","parseFloat","amount","totalExpenses","availableIncome","completedCount","b","length","prev","map","badge","handleSetAmount","handleAddPayment","payment","toFixed","token","localStorage","getItem","newExpense","title","find","category","date","Date","toISOString","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","newPaid","window","dispatchEvent","Event","err","message","getProgress","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","value","onChange","target","onClick","style","width","max","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Budgetly/client/src/pages/Badges.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { ExpensesContext } from '../context/ExpensesContext';\r\n\r\nconst Badges = () => {\r\n  // All hooks declared at the top\r\n  const { expenses, isLoading, error: contextError, setExpenses } = useContext(ExpensesContext);\r\n  const [error, setError] = useState('');\r\n\r\n  // Initial badges data\r\n  const initialBadges = [\r\n    { id: 1, name: 'Debt Destroyer', totalAmount: 0, paidAmount: 0, completed: false },\r\n    { id: 2, name: 'Emergency Hero', totalAmount: 0, paidAmount: 0, completed: false },\r\n    { id: 3, name: 'Savings Champion', totalAmount: 0, paidAmount: 0, completed: false },\r\n    { id: 4, name: 'Investment Starter', totalAmount: 0, paidAmount: 0, completed: false },\r\n    { id: 5, name: 'Retirement Planner', totalAmount: 0, paidAmount: 0, completed: false },\r\n    { id: 6, name: 'Goal Getter', completed: false }\r\n  ];\r\n\r\n  const [badges, setBadges] = useState(initialBadges);\r\n  const [inputAmounts, setInputAmounts] = useState({});\r\n\r\n  // Calculations\r\n  const totalIncome = expenses\r\n    .filter(e => e.type && String(e.type).trim().toLowerCase() === 'income')\r\n    .reduce((sum, e) => sum + (parseFloat(e.amount) || 0), 0);\r\n\r\n  const totalExpenses = expenses\r\n    .filter(e => e.type && String(e.type).trim().toLowerCase() === 'expense')\r\n    .reduce((sum, e) => sum + (parseFloat(e.amount) || 0), 0);\r\n\r\n  const availableIncome = totalIncome - totalExpenses;\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    const completedCount = badges.filter(b => b.id !== 6 && b.completed).length;\r\n    setBadges(prev => prev.map(badge => \r\n      badge.id === 6 ? { ...badge, completed: completedCount >= 3 } : badge\r\n    ));\r\n  }, [badges]);\r\n\r\n  // Helper functions\r\n  const handleSetAmount = (id) => {\r\n    const amount = parseFloat(inputAmounts[id] || 0);\r\n    if (amount > 0) {\r\n      setBadges(badges.map(badge => \r\n        badge.id === id ? { ...badge, totalAmount: amount } : badge\r\n      ));\r\n      setInputAmounts({ ...inputAmounts, [id]: '' });\r\n    }\r\n  };\r\n\r\n  const handleAddPayment = async (id) => {\r\n    const payment = parseFloat(inputAmounts[id] || 0);\r\n    \r\n    if (payment <= 0) {\r\n      setError('Payment amount must be positive');\r\n      return;\r\n    }\r\n\r\n    if (payment > availableIncome) {\r\n      setError(`You only have $${availableIncome.toFixed(2)} available. Cannot pay $${payment.toFixed(2)}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const newExpense = {\r\n        title: `Payment to ${badges.find(b => b.id === id).name}`,\r\n        amount: payment,\r\n        type: 'expense',\r\n        category: 'Debt Payment',\r\n        date: new Date().toISOString()\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:5000/api/expenses\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(newExpense),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to save payment\");\r\n\r\n      const data = await response.json();\r\n      setExpenses([...expenses, data]);\r\n      \r\n      setBadges(badges.map(badge => {\r\n        if (badge.id === id) {\r\n          const newPaid = badge.paidAmount + payment;\r\n          return { \r\n            ...badge, \r\n            paidAmount: newPaid,\r\n            completed: newPaid >= badge.totalAmount\r\n          };\r\n        }\r\n        return badge;\r\n      }));\r\n\r\n      setInputAmounts({ ...inputAmounts, [id]: '' });\r\n      setError('');\r\n      window.dispatchEvent(new Event('expenseAdded'));\r\n      \r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const getProgress = (badge) => {\r\n    if (!badge.totalAmount) return 0;\r\n    return Math.min(100, (badge.paidAmount / badge.totalAmount) * 100);\r\n  };\r\n\r\n  // Loading state check\r\nif (isLoading) return <div className=\"p-6\">Loading financial data...</div>;\r\nif (contextError) return <div className=\"p-6\">Error: {contextError}</div>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Financial Badges</h1>\r\n      \r\n      {error && (\r\n        <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-md\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-4 p-4 bg-blue-50 rounded-lg\">\r\n        <p className=\"font-semibold\">Available Income: ${availableIncome.toFixed(2)}</p>\r\n        <p className=\"text-sm text-gray-600\">\r\n          Total Income: ${totalIncome.toFixed(2)} | Total Expenses: ${totalExpenses.toFixed(2)}\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {badges.map((badge) => (\r\n          <div \r\n            key={badge.id} \r\n            className={`bg-white rounded-xl shadow-md p-6 relative ${\r\n              badge.id === 6 ? 'border-2 border-purple-500' : ''\r\n            }`}\r\n          >\r\n            {badge.completed && (\r\n              <div className=\"absolute top-4 right-4 bg-yellow-400 text-white rounded-full w-10 h-10 flex items-center justify-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n            )}\r\n            \r\n            <h2 className=\"text-xl font-bold mb-4\">{badge.name}</h2>\r\n            \r\n            {badge.id !== 6 ? (\r\n              <>\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"Enter total amount\"\r\n                      value={inputAmounts[badge.id] || ''}\r\n                      onChange={(e) => setInputAmounts({\r\n                        ...inputAmounts,\r\n                        [badge.id]: e.target.value\r\n                      })}\r\n                      className=\"flex-1 p-2 border rounded-l-md\"\r\n                    />\r\n                    <button\r\n                      onClick={() => handleSetAmount(badge.id)}\r\n                      className=\"bg-blue-500 text-white px-4 py-2 rounded-r-md hover:bg-blue-600\"\r\n                    >\r\n                      Set\r\n                    </button>\r\n                  </div>\r\n                  {badge.totalAmount > 0 && (\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Total: ${badge.totalAmount.toFixed(2)}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n                    <div\r\n                      className=\"bg-green-500 h-4 rounded-full\"\r\n                      style={{ width: `${getProgress(badge)}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm mt-1\">\r\n                    <span>${badge.paidAmount.toFixed(2)} paid</span>\r\n                    <span>${Math.max(0, badge.totalAmount - badge.paidAmount).toFixed(2)} left</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Add payment\"\r\n                    value={inputAmounts[badge.id] || ''}\r\n                    onChange={(e) => {\r\n                      setInputAmounts({\r\n                        ...inputAmounts,\r\n                        [badge.id]: e.target.value\r\n                      });\r\n                      setError('');\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-l-md\"\r\n                  />\r\n                  <button\r\n                    onClick={() => handleAddPayment(badge.id)}\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded-r-md hover:bg-green-600 disabled:bg-gray-300\"\r\n                    disabled={badge.totalAmount === 0 || availableIncome <= 0}\r\n                  >\r\n                    Pay\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"text-center py-4\">\r\n                <p className=\"text-gray-600 mb-2\">\r\n                  Complete any 3 other badges to unlock this achievement!\r\n                </p>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-4\">\r\n                  <div\r\n                    className=\"bg-purple-500 h-4 rounded-full\"\r\n                    style={{ width: `${(badges.filter(b => b.completed)).length / 3 * 100}%` }}\r\n                  ></div>\r\n                </div>\r\n                <p className=\"text-sm mt-2\">\r\n                  Progress: {badges.filter(b => b.completed).length}/3 completed\r\n                </p>\r\n              </div>\r\n            )}\r\n            \r\n            {badge.completed && (\r\n              <div className=\"mt-4 p-2 bg-green-100 text-green-800 rounded-md text-center\">\r\n                {badge.id === 6 ? (\r\n                  \"Amazing! You're a Goal Getter!\"\r\n                ) : (\r\n                  `Congratulations! You've earned the ${badge.name} badge!`\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badges;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}